# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/permission/add:
        post:
            tags:
                - Permission
            operationId: Permission_Add
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.PermSaveRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.PermReply'
    /v1/permission/list:
        get:
            tags:
                - Permission
            operationId: Permission_ListPage
            parameters:
                - name: pageNo
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: sort
                  in: query
                  schema:
                    type: string
                - name: direction
                  in: query
                  schema:
                    type: string
                - name: permName
                  in: query
                  schema:
                    type: string
                - name: url
                  in: query
                  schema:
                    type: string
                - name: action
                  in: query
                  schema:
                    type: string
                - name: permType
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.PermListReply'
    /v1/permission/update:
        post:
            tags:
                - Permission
            operationId: Permission_Update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.PermSaveRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.PermReply'
    /v1/role/add:
        post:
            tags:
                - Role
            operationId: Role_Add
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.RoleSaveRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.RoleReply'
    /v1/role/assignPerm:
        post:
            tags:
                - Role
            operationId: Role_AssignPermission
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.RoleAssignPermRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.RoleOk'
    /v1/role/code:
        get:
            tags:
                - Role
            operationId: Role_GetByCode
            parameters:
                - name: roleCode
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.RoleReply'
    /v1/role/delete:
        post:
            tags:
                - Role
            operationId: Role_DeleteById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.RoleDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.RoleOk'
    /v1/role/list:
        get:
            tags:
                - Role
            operationId: Role_ListPage
            parameters:
                - name: pageNo
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: sort
                  in: query
                  schema:
                    type: string
                - name: direction
                  in: query
                  schema:
                    type: string
                - name: roleCode
                  in: query
                  schema:
                    type: string
                - name: roleName
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.RoleListReply'
    /v1/user/assignRole:
        post:
            tags:
                - User
            description: 分配角色
            operationId: User_AssignRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.AssignRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserOk'
    /v1/user/checkPermission:
        post:
            tags:
                - User
            description: 校验权限
            operationId: User_CheckPermission
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.CheckPermissionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserOk'
    /v1/user/createByEmail:
        post:
            tags:
                - User
            description: 邮箱注册
            operationId: User_CreateByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UserEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserReply'
    /v1/user/delete:
        post:
            tags:
                - User
            description: 删除用户
            operationId: User_DeleteById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UserDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserOk'
    /v1/user/list:
        get:
            tags:
                - User
            description: 用户例表
            operationId: User_ListPage
            parameters:
                - name: pageNo
                  in: query
                  description: 当前页数
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: 每页数量
                  schema:
                    type: string
                - name: sort
                  in: query
                  description: 排序字段
                  schema:
                    type: string
                - name: direction
                  in: query
                  description: 排序类型：asc、desc
                  schema:
                    type: string
                - name: realName
                  in: query
                  description: 姓名
                  schema:
                    type: string
                - name: email
                  in: query
                  description: 邮箱
                  schema:
                    type: string
                - name: status
                  in: query
                  description: 状态
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserListReply'
    /v1/user/login:
        post:
            tags:
                - User
            description: 邮箱登录
            operationId: User_LoginByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UserEmailLoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.LoginReply'
    /v1/user/verifyToken:
        post:
            tags:
                - User
            description: 验证token
            operationId: User_VerifyToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UserVerifyTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UserClaimsReply'
components:
    schemas:
        api.user.v1.AssignRoleRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: 用户ID
                roleCode:
                    type: string
                    description: 角色编号
            description: 分配角色
        api.user.v1.CheckPermissionRequest:
            type: object
            properties:
                sub:
                    type: string
                obj:
                    type: string
                act:
                    type: string
        api.user.v1.LoginReply:
            type: object
            properties:
                token:
                    type: string
                    description: token
            description: 登录响应
        api.user.v1.PermListReply:
            type: object
            properties:
                count:
                    type: string
                pageNo:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                permList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.v1.PermReply'
        api.user.v1.PermReply:
            type: object
            properties:
                id:
                    type: string
                permName:
                    type: string
                url:
                    type: string
                action:
                    type: string
                permType:
                    type: integer
                    format: int32
                parentId:
                    type: string
        api.user.v1.PermSaveRequest:
            type: object
            properties:
                id:
                    type: string
                permName:
                    type: string
                url:
                    type: string
                action:
                    type: string
                permType:
                    type: integer
                    format: int32
                parentId:
                    type: string
        api.user.v1.RoleAssignPermRequest:
            type: object
            properties:
                RoleId:
                    type: string
                PermIdList:
                    type: array
                    items:
                        type: string
        api.user.v1.RoleDeleteRequest:
            type: object
            properties:
                id:
                    type: string
        api.user.v1.RoleListReply:
            type: object
            properties:
                count:
                    type: string
                pageNo:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                roleList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.v1.RoleReply'
        api.user.v1.RoleOk:
            type: object
            properties:
                success:
                    type: boolean
        api.user.v1.RoleReply:
            type: object
            properties:
                id:
                    type: string
                roleCode:
                    type: string
                roleName:
                    type: string
        api.user.v1.RoleSaveRequest:
            type: object
            properties:
                id:
                    type: string
                roleCode:
                    type: string
                roleName:
                    type: string
        api.user.v1.UserClaimsReply:
            type: object
            properties:
                id:
                    type: string
                sub:
                    type: string
                role:
                    type: string
        api.user.v1.UserDeleteRequest:
            type: object
            properties:
                id:
                    type: string
        api.user.v1.UserEmailLoginRequest:
            type: object
            properties:
                email:
                    type: string
                    description: 邮箱
                password:
                    type: string
                    description: 密码
            description: 邮箱登录
        api.user.v1.UserEmailRequest:
            type: object
            properties:
                email:
                    type: string
                    description: 邮箱
                password:
                    type: string
                    description: 密码
            description: 用户邮箱信息
        api.user.v1.UserListReply:
            type: object
            properties:
                count:
                    type: string
                    description: 总数量
                pageNo:
                    type: integer
                    description: 当前页
                    format: int32
                pageSize:
                    type: integer
                    description: 每页数
                    format: int32
                userList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.v1.UserReply'
                    description: 用户例表
            description: 用户列表
        api.user.v1.UserOk:
            type: object
            properties:
                success:
                    type: boolean
        api.user.v1.UserReply:
            type: object
            properties:
                id:
                    type: string
                    description: 用户ID
                realName:
                    type: string
                    description: 姓名
                userName:
                    type: string
                    description: 用户名
                email:
                    type: string
                    description: 邮箱
                status:
                    type: integer
                    description: 状态
                    format: int32
                roleCode:
                    type: string
                    description: 角色
            description: 用户信息
        api.user.v1.UserVerifyTokenRequest:
            type: object
            properties:
                token:
                    type: string
tags:
    - name: Permission
    - name: Role
    - name: User
      description: 用户管理
